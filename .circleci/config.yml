---
version: 2.1
executors:
  doc_executor:
    docker:
      - image: circleci/python:3.7.4
      
jobs:
  build:
    executor: doc_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-{{ checksum "docs/requirements.txt" }}
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r docs/requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: deps-{{ checksum "docs/requirements.txt" }}
      - run:
          name: Run MkDocs
          command: |
            . venv/bin/activate
            mkdocs build -s
      - persist_to_workspace:
          root: /home/circleci/project
          paths: site
      - store_artifacts:
          path: ./site
          destination: site

  vale:
    executor: doc_executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Run Vale
          command: |
            # create a dummy container which will hold a volume with data
            docker create -v /doc --name docVol alpine:3.4 /bin/true
            # copy files into this volume
            docker cp ./ docVol:/doc
            docker run --rm --volumes-from docVol jdkato/vale --config /doc/.vale.ini --glob='*.{md}' . > vale.out
      - store_artifacts:
          path: ./vale.out
          destination: vale.out

  linkchecker:
    executor: doc_executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: /home/circleci/project
      - run:
          name: Run LinkChecker
          command: |
            # create a dummy container which will hold a volume with data
            docker create -v /doc --name docVol alpine:3.4 /bin/true
            # copy files into this volume
            docker cp ./ docVol:/doc
            docker run --rm -u $(id -u):$(id -g) --volumes-from docVol linkchecker/linkchecker /doc/site/ --ignore-url='custom_theme' --ignore-url='404.html' --ignore-url='http://localhost' --ignore-url='https://localhost' --check-extern --no-status > linkchecker.out
      - store_artifacts:
          path: ./linkchecker.out
          destination: linkchecker.out

  markdownlint:
    executor: doc_executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Run Markdownlint
          command: |
            # create a dummy container which will hold a volume with data
            docker create -v /doc --name docVol alpine:3.4 /bin/true
            # copy files into this volume
            docker cp ./ docVol:/doc
            docker run --rm --volumes-from docVol -w /doc pipelinecomponents/markdownlint mdl --style all . > markdownlint.out
      - store_artifacts:
          path: ./markdownlint.out
          destination: markdownlint.out

workflows:
  version: 2
  default:
    jobs:
      - build
      - vale
      - markdownlint
      - linkchecker:
          requires:
            - build
